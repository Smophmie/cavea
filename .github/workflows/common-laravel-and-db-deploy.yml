name: Laravel Kubernetes Deployment

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev or prod)'
        required: true
        type: string
        default: 'dev'

jobs:
  laravel-and-db-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version from Git SHA
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Set environment variables
        id: env
        run: |
          if [ "${{ inputs.environment }}" == "prod" ]; then
            echo "NAMESPACE=cavea-back-prod" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=values_prod.yaml" >> $GITHUB_OUTPUT
          else
            echo "NAMESPACE=cavea-back-dev" >> $GITHUB_OUTPUT
            echo "VALUES_FILE=values_dev.yaml" >> $GITHUB_OUTPUT
          fi

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Configure Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - name: Deploy database with Helm
        run: |
          helm upgrade database ./cavea-back/k8s_helm/database \
            -f ./cavea-back/k8s_helm/database/${{ steps.env.outputs.VALUES_FILE }} \
            --namespace ${{ steps.env.outputs.NAMESPACE }} \
            --create-namespace \
            --install \
            --set mysql_root_password=${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Deploy backend with Helm
        run: |
          helm upgrade back ./cavea-back/k8s_helm/backend \
            -f ./cavea-back/k8s_helm/backend/${{ steps.env.outputs.VALUES_FILE }} \
            --namespace ${{ steps.env.outputs.NAMESPACE }} \
            --create-namespace \
            --install \
            --set db_password=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            --set image.tag=${{ steps.version.outputs.SHORT_SHA }}

      - name: Wait for backend pod to be ready
        run: |
          kubectl rollout status deployment/back-deployment -n ${{ steps.env.outputs.NAMESPACE }}

      - name: Wait for database pod to be ready
        run: |
          echo "Waiting for MySQL database to be ready..."
          kubectl wait --for=condition=ready pod \
            -l app=database \
            -n ${{ steps.env.outputs.NAMESPACE }} \
            --timeout=300s
          echo "Database pod is ready"

      - name: Verify MySQL is accepting connections
        run: |
          echo "üîç Verifying MySQL is accepting connections..."
          
          # Attendre que MySQL soit vraiment pr√™t (pas juste le pod)
          for i in {1..30}; do
            if kubectl exec deployment/database-deployment -n ${{ steps.env.outputs.NAMESPACE }} -- \
               mysqladmin ping -h localhost -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} --silent; then
              echo "MySQL is accepting connections"
              exit 0
            fi
            echo "Attempt $i/30: MySQL not ready yet, waiting 10s..."
            sleep 10
          done
          
          echo "MySQL failed to become ready after 5 minutes"
          exit 1
      
      - name: Run Laravel migrations on cluster
        run: |
          kubectl exec deploy/back-deployment -n ${{ steps.env.outputs.NAMESPACE }} -- \
          php artisan migrate --force